@model IEnumerable<TechCareerFair.Models.ApplicantViewModel>

@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Admin - Manage Applicant Accounts";
    var pagedList = (IPagedList)Model;
    var criteria = ViewBag.CurrentCriteria;
    var currentFilter = ViewBag.CurrentFilter;
}

<style>
    .body-content {
        background-color: #edf9ef;
    }
</style>

<h2>Admin - Manage Applicant Accounts</h2>

Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("ListApplicants", new { page, filter = currentFilter, sortOrder = ViewBag.CurrentSort, searchCriteria = criteria }))

@using (Html.BeginForm())
{
<div id="FilterSearch" class="form-horizontal">

    <div class="form-group">
        @Html.Label("Search by Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
        @Html.TextBox("searchCriteria", null, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.Label("Filter by Account Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <select id="filter" name="filter" class="form-control">
            <option value="None">None</option>
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </select>
    </div>

    <div class="form-group">
        <input type="submit" value="Find Applicants" class="btn col-md-2 col-md-offset-2" />
        <input type="button" value="Reset Applicant List" onclick="location.href='@Url.Action("ListApplicants","Admin")'" class="btn col-md-2 col-md-offset-2" />
    </div>

</div>
}

<p>
    @Html.ActionLink("Create New", "CreateApplicant") | @Html.ActionLink("Return", "LandingPage")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Email).ToHtmlString(), "ListApplicants", new { sortOrder = "Email", searchCriteria = criteria, filter = currentFilter })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.FirstName).ToHtmlString(), "ListApplicants", new { sortOrder = "FirstName", searchCriteria = criteria, filter = currentFilter })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.LastName).ToHtmlString(), "ListApplicants", new { sortOrder = "LastName", searchCriteria = criteria, filter = currentFilter })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Active).ToHtmlString(), "ListApplicants", new { sortOrder = "Active", searchCriteria = criteria, filter = currentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                <a href="mailto:@Html.DisplayFor(modelItem => item.Email).ToHtmlString()">@Html.DisplayFor(modelItem => item.Email)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                @Html.ActionLink("Edit", "EditApplicant", new { id = item.ApplicantID }) |
                @Html.ActionLink("Details", "ApplicantDetails", new { id = item.ApplicantID }) |
                @Html.ActionLink("Delete", "DeleteApplicant", new { id = item.ApplicantID })
            </td>
        </tr>
    }

</table>

<p>
    @Html.ActionLink("Return", "LandingPage")
</p>
