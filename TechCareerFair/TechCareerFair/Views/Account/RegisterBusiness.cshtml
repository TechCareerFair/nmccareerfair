@model TechCareerFair.Models.BusinessViewModel

@{
    ViewBag.Title = "Business";
}
<script src='https://www.google.com/recaptcha/api.js' sync defer></script>
<body>
    <div class="container">

        @using (Html.BeginForm("RegisterBusiness", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="col-md-8 col-md-offset-2" style="background-color: #fff; padding: 15px; box-shadow:#333 0px 2px 6px; margin-bottom:60px;margin-top:60px;">

                <h2>Business Sign Up</h2>
                <h3>@ViewBag.Error</h3>
                <br />
                <p>Sign-up Progress</p>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped active" id="progressbar" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                </div>

                <div id="requiredInfo" class="col-lg-12">
                    <hr />
                    <h4>Required Information</h4>
                    <br />
                    <h5>Only this page is required to be filled out. All other pages can be filled out later</h5>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.BusinessName, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.BusinessName, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-12">
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control edit business-form", @type = "password" } })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>
                    <br />
                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 col-sm-offset-4 btn btn-theme" value="Next " onclick="showHideInputForms('requiredInfo', 'optionalInfo1')" />
                    </div>
                    <br />
                </div>

                <div id="optionalInfo1" style="display: none" class="col-lg-12">
                    <hr />
                    <h4>Optional Information - 1</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.BusinessDescription, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.BusinessDescription, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.BusinessDescription, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SocialMedia, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.SocialMedia, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.SocialMedia, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            <input class="form-control edit business-form" type="file" id="fileUpload" name="fileUpload" /> <br />
                        </div>
                    </div>
                    <br />
                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 btn btn-theme" value="Back" onclick="showHideInputForms('requiredInfo', 'optionalInfo1')" />
                        <input type="button" class="col-sm-3 col-sm-offset-1 btn btn-theme" value="Next" onclick="showHideInputForms('optionalInfo1', 'optionalInfo2')" />
                    </div>
                    <br />
                </div>

                <div id="optionalInfo2" style="display: none" class="col-lg-12">
                    <hr />
                    <h4>Optional Information - 2</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                            @Html.DropDownListFor(model => model.State, (List<SelectListItem>)ViewBag.States, htmlAttributes: new { @class = "form-control edit business-form" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control edit business-form" } })
                        </div>
                    </div>

                    <br />
                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 btn btn-theme" value="Back" onclick="showHideInputForms('optionalInfo1', 'optionalInfo2')" />
                        <input type="button" class="col-sm-3 col-sm-offset-1 btn btn-theme" value="Next" onclick="showHideInputForms('optionalInfo2', 'optionalInfo3')" />
                    </div>
                    <br />
                </div>

                <div id="optionalInfo3" style="display: none" class="col-lg-12">
                    <hr />
                    <h4>Optional Information - 3</h4>

                    <div class="col-md-12">
                        <h3>Fields Of Business</h3>
                        <br />
                        @foreach (var x in ViewBag.Fields)
                        {
                            <input class="edit business-form" type="checkbox" id="@x.Name" name="fields" value="@x.Name">
                            <label for="fields">@x.Name</label>
                            <br />
                        }
                        @if (ViewBag.ErrCheckFields != null)
                        {
                            foreach (var y in ViewBag.ErrCheckFields)
                            {
                                <script>
                                document.getElementById("@y").checked = true;
                                </script>
                            }
                        }
                        <br />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactMe, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.ContactMe, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.ContactMe, new { htmlAttributes = new { @class = "form-control checkbox edit business-form" } })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PreferEmail, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.ValidationMessageFor(model => model.PreferEmail, "", new { @class = "text-danger" })
                            @Html.EditorFor(model => model.PreferEmail, new { htmlAttributes = new { @class = "form-control checkbox edit business-form" } })
                        </div>
                    </div>
                    <br />
                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 btn btn-theme" value="Back" onclick="showHideInputForms('optionalInfo2', 'optionalInfo3')" />
                    </div>
                    <br />
                </div>

                <div class="form-group col-sm-12">
                    <label class="text-danger">@ViewBag.ErrCaptcha</label>
                    <div class="g-recaptcha" data-sitekey="6LcumlMUAAAAAKZBJOBbaqSr4gZecbfS5c6e_rsz"></div> <br />

                    <input type="reset" class="col-sm-3 btn btn-theme" value="Reset" />
                    <input type="submit" class="col-sm-3 col-sm-offset-1 btn btn-theme" value="Submit" />
                </div>
            </div>

        }

        <script type="text/javascript">
            function showHideInputForms(TagID1, TagID2) {
                //Code Found At:
                //Site Name: W3Schools
                //Site https://www.w3schools.com/howto/howto_js_toggle_hide_show.asp

                var Tag1 = document.getElementById(TagID1);
                var Tag2 = document.getElementById(TagID2);
                var progressBar = document.getElementById("progressbar");

                if (Tag1.style.display === "none") {
                    Tag1.style.display = "block";
                } else {
                    Tag1.style.display = "none";
                    if (progressBar.style.width === "0%") {
                        progressBar.style.width = "25%";
                    } else if (progressBar.style.width === "25%") {
                        progressBar.style.width = "50%";
                    } else if (progressBar.style.width === "50%") {
                        progressBar.style.width = "75%";
                    } else if (progressBar.style.width === "75%") {
                        progressBar.style.width = "100%";
                    }
                }

                if (Tag2.style.display === "none") {
                    Tag2.style.display = "block";
                } else {
                    Tag2.style.display = "none";

                    if (progressBar.style.width === "25%") {
                        progressBar.style.width = "0%";
                    } else if (progressBar.style.width === "50%") {
                        progressBar.style.width = "25%";
                    } else if (progressBar.style.width === "75%") {
                        progressBar.style.width = "50%";
                    } else if (progressBar.style.width === "100%") {
                        progressBar.style.width = "75%";
                    }
                }
            }
        </script>
    </div>
</body>