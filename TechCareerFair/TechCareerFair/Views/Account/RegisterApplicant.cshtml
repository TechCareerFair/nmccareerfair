@model TechCareerFair.Models.ApplicantViewModel
@{
    ViewBag.Title = "Applicant";
}
<script src='https://www.google.com/recaptcha/api.js' sync defer></script>
<body>
    <div class="container">


        @using (Html.BeginForm("RegisterApplicant", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <!--To Do: Create css class for grey box about this div-->
            <div class="col-md-8 col-md-offset-2" style="background-color: lightgray; border-radius: 5px; padding: 15px;" onload="showHideInputForms('optionalInfo1', 'optionalInfo2')">

                <h2>Applicant Sign Up</h2>
                <h3>@ViewBag.Error</h3>
                <br />
                <p>Sign-up Progress</p>
                <div class="progress">
                    <div class="progress-bar progress-bar-striped active" id="progressbar" role="progressbar" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                </div>

                <div id="requiredInfo" class="col-lg-12">
                    <h4>Required Information</h4>
                    <br />
                    <h5>Only this page is required to be filled out. All other pages can be filled out later</h5>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 col-sm-offset-4 btn btn-default" value="Next " onclick="showHideInputForms('requiredInfo', 'optionalInfo1')" />
                    </div>
                    <br />
                </div>

                <div id="optionalInfo1" class="col-lg-12" style="display: none">
                    <h4>Optinal Information - 1</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Alumni, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Alumni, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Alumni, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Profile, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Profile, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Profile, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SocialMedia, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SocialMedia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SocialMedia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 btn btn-default" value="Back" onclick="showHideInputForms('requiredInfo', 'optionalInfo1')" />
                        <input type="button" class="col-sm-3 col-sm-offset-1 btn btn-default" value="Next" onclick="showHideInputForms('optionalInfo1', 'optionalInfo2')" />
                    </div>
                    <br />
                </div>

                <div id="optionalInfo2" class="col-lg-12" style="display: none">

                    <h4>Optinal Information - 2</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.YearsExperience, htmlAttributes: new { @class = "control-label col-md-6" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.YearsExperience, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.YearsExperience, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-6">Looking for an Internship</label>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Internship, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Internship, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        @Html.LabelFor(model => model.Resume, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            <input class="form-control" type="file" id="fileUpload" name="fileUpload" />
                            @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-12">
                        <br />
                        <h3>Fields Of Work</h3>
                        <br />
                        @foreach (var x in ViewBag.Fields)
                        {
                            <input class="" type="checkbox" id="@x.Name" name="fields" value="@x.Name">
                            <label for="fields">@x.Name</label>
                            <br />
                        }
                        @if (ViewBag.ErrCheckFields != null)
                        {
                            foreach (var y in ViewBag.ErrCheckFields)
                            {
                                <script>
                                document.getElementById("@y").checked = true;
                                </script>
                            }
                        }
                        <br />
                    </div>

                    <br />
                    <div class="form-group col-sm-12">
                        <hr />
                        <input type="button" class="col-sm-3 btn btn-default" value="Back" onclick="showHideInputForms('optionalInfo1', 'optionalInfo2')" />
                    </div>
                    <br />
                </div>

                <div class="form-group col-sm-12">
                    <div id="recaptcha" class="g-recaptcha" data-sitekey="6LcumlMUAAAAAKZBJOBbaqSr4gZecbfS5c6e_rsz"></div> <br />

                    <input type="reset" class="col-sm-3 btn btn-default" value="Reset" />
                    <input type="submit" class="col-sm-3 col-sm-offset-1 btn btn-default" value="Submit" />
                </div>
            </div>
        }
    </div>


    <script type="text/javascript">
        function showHideInputForms(TagID1, TagID2) {
            //Code Found At:
            //Site Name: W3Schools
            //Site https://www.w3schools.com/howto/howto_js_toggle_hide_show.asp

            var Tag1 = document.getElementById(TagID1);
            var Tag2 = document.getElementById(TagID2);
            var progressBar = document.getElementById("progressbar");

            if (Tag1.style.display === "none") {
                Tag1.style.display = "block";
            } else {
                Tag1.style.display = "none";
                if (progressBar.style.width === "0%") {
                    progressBar.style.width = "33%";
                } else if (progressBar.style.width === "33%") {
                    progressBar.style.width = "66%";
                } else if (progressBar.style.width === "66%") {
                    progressBar.style.width = "100%";
                }
            }

            if (Tag2.style.display === "none") {
                Tag2.style.display = "block";
            } else {
                Tag2.style.display = "none";

                if (progressBar.style.width === "33%") {
                    progressBar.style.width = "0%";
                } else if (progressBar.style.width === "66%") {
                    progressBar.style.width = "33%";
                } else if (progressBar.style.width === "100%") {
                    progressBar.style.width = "66%";
                }
            }
        }
    </script>
</body>